"""
Create NPGO Index
Author: Riley X. Brady
Date: 10/05/2017

For a given ensemble member, this script computes the Victoria Mode, the second
EOF/PC of SSTa in the North Pacific (north of 20N).

Reference: Ding et al. 2015, JGR: Atmospheres

Domain: 124.5E to 100.5W; 20.5N to 65.5N
"""
import numpy as np
import pandas as pd
import xarray as xr
import esmtools as et
from eofs.xarray import Eof
from scipy import signal

def detrend(ds):
    if ds.min().isnull():
        return xr.DataArray(np.nan)
    else:
        ds = signal.detrend(ds)
        return xr.DataArray(ds)

def main():
    ds = xr.open_dataset('/glade/scratch/rbrady/EBUS_BGC_Variability/SST_monthly/' +
                     'remapped/remapped.SST.001.192001-210012.nc')
    ds['time'] = pd.date_range('1920-01', '2101-01', freq='M')
    ds = ds['SST']
    ds = ds.sel(time=slice('1920-01', '2015-12'), lat=slice(20.5,65.5),
                lon=slice(124.5,259.5))
    climatology = ds.groupby('time.month').mean(dim='time')
    anomalies = ds.groupby('time.month') - climatology
    anomalies = anomalies.stack(allpoints=['lat','lon']) \
                     .groupby('allpoints', squeeze=True) \
                     .apply(detrend) \
                     .unstack('allpoints')
    anomalies.name = 'SSTa'
    ds = anomalies.to_dataset()
    # The above function returns time without a name. The EOF package seeks
    # an index called "time"
    ds = ds.rename({'dim_0': 'time'})
    # Weight by cosine of latitude.
    coslat = np.cos(np.deg2rad(ds.lat.values))
    wgts = np.sqrt(coslat)[..., np.newaxis]
    # I pass the center keyword as false, since center just subtracts out the
    # long term mean to generate anomalies. Since I created monthly clim.
    # anomalies, I don't need them to create them.
    solver = Eof(ds['SSTa'], weights=wgts, center=False)
    eof = solver.eofsAsCorrelation(neofs=2)
    # pcscaling=1 divides the PCs by the sqrt of their eigenvalue. This creates
    # a scaled index so that we don't get raw SSH anomalies.
    pc = solver.pcs(npcs=2, pcscaling=1)
    # How much variance do we get explained?
    variance_fraction = solver.varianceFraction(neigs=2)
    ds = eof.to_dataset()
    ds['pc'] = pc
    ds['variance_fraction'] = variance_fraction
    ds = ds.rename({'eofs': 'eof'})
    # Only want to save the second mode of SSHa, since that's NPGO by definition.
    ds = ds.sel(mode=1)
    # Add a description of methods for clarity.
    ds.attrs['description'] = 'Second mode of SSTa variability over 20.5-65.5N and 124.5E-100.5W.'
    ds.attrs['anomalies'] = ('Anomalies were generated by removing the 1920-2015 monthly climatology ' +
                             'at each grid cell. These anomalies were linearly detrended before computing ' +
                             'the EOF.')
    ds.attrs['weighting'] = ('The native grid was regridded to a standard 1deg x 1deg (180x360) grid.' +
                             'Weighting was computed via the sqrt of the cosine of latitude.')
    ds.to_netcdf('/glade/u/home/rbrady/projects/EBUS_BGC_Variability/victoria.nc')

if __name__ == '__main__':
    main()
